plugins {
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
    id "jacoco"
}

springBoot {
    mainClass = "com.bank.enterprise.MainApplication"
}

apply plugin: 'java'

group = "com.bank.enterprise"
version = '1.0.1'
sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

ext['log4j2.version'] = '2.17.1'

repositories {
    mavenCentral()
}

ext {
    mapstructVersion = "1.4.2.Final"
    lombokVersion = "1.18.26"
}
dependencies {
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    //dependency Base
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation 'jakarta.validation:jakarta.validation-api'

    //dependencies for default
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.1.0'

    implementation group: 'org.mapstruct' , name: 'mapstruct' , version: '1.5.3.Final'
    annotationProcessor group: 'org.mapstruct' , name: 'mapstruct-processor' , version: '1.5.3.Final'
    compileOnly group: 'org.projectlombok' , name: 'lombok' , version: ''
    implementation group: 'com.h2database' , name: 'h2' , version: '2.1.214'

    //test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine'
}

compileJava {
    options.compilerArgs += [
            '-Amapstruct.suppressGeneratorTimestamp=true',
            '-Amapstruct.suppressGeneratorVersionInfoComment=true',
            '-Amapstruct.verbose=true',
            '-Amapstruct.defaultComponentModel=spring'
    ]
}

sourceSets.main.java.srcDirs = ["$buildDir/generated/src/main/java", "src/main/java"]

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        xml.destination file("$buildDir/jacoco/test.xml")
        html.destination file("$buildDir/jacoco/index.html")
        html.required = true
        csv.required = true
    }
}